###########
# BUILDER #
###########

# pull official base image
FROM python:3.13.0-slim-bookworm AS builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN \
  --mount=type=cache,target=/var/cache/apt,sharing=locked \
  --mount=type=cache,target=/var/lib/apt,sharing=locked \
  apt-get update \
  && apt-get install -y --no-install-recommends gcc \
  && pip install --upgrade pip

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

COPY . /usr/src/app/

#########
# FINAL #
#########

# pull official base image
FROM python:3.13.0-slim-bookworm

# create directory for the app user
# create the app user
RUN mkdir -p /home/app \
  && addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir "$APP_HOME" && mkdir "$APP_HOME"/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN \
  --mount=type=cache,target=/var/cache/apt,sharing=locked \
  --mount=type=cache,target=/var/lib/apt,sharing=locked \
  apt-get update \
  && apt-get install -y --no-install-recommends netcat-openbsd
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip \
  && pip install --no-cache /wheels/*

COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  "$APP_HOME"/entrypoint.prod.sh \
  && chmod +x  "$APP_HOME"/entrypoint.prod.sh

# copy project
COPY . "$APP_HOME"

# chown all the files to the app user
RUN chown -R app:app "$APP_HOME"

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
